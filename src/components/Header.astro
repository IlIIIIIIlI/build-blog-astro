---
import LanguagePicker from './LanguagePicker.astro';
import { getLangFromUrl, useTranslations } from '../i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const pathname = new URL(Astro.request.url).pathname;

const navItems = [
  { href: '/', label: 'nav.home' },
  { href: '/blog', label: 'nav.blog' },
  { href: '/timeline', label: 'nav.timeline' },
  { href: '/contact', label: 'nav.contact' },
];
---

<header class="border-b dark:border-gray-700">
  <nav class="max-w-4xl mx-auto px-4 py-4 flex justify-between items-center">
    <a href={`/${lang}/`} class="text-xl font-bold text-gray-900 dark:text-white">TechBlog</a>
    
    <!-- Desktop Menu -->
    <div class="hidden md:flex items-center gap-4">
      {navItems.map(({ href, label }) => (
        <a 
          href={`/${lang}${href}`}
          class={`text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white ${
            pathname === `/${lang}${href}` ? 'font-bold' : ''
          }`}
        >
          {t(label)}
        </a>
      ))}
      <LanguagePicker />
      <button
        id="theme-toggle"
        class="p-2 text-gray-500 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg"
        aria-label="Toggle theme"
      >
        <svg
          id="theme-toggle-dark-icon"
          class="w-5 h-5 hidden"
          fill="currentColor"
          viewBox="0 0 20 20"
        >
          <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
        </svg>
        <svg
          id="theme-toggle-light-icon"
          class="w-5 h-5 hidden"
          fill="currentColor"
          viewBox="0 0 20 20"
        >
          <path d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"></path>
        </svg>
      </button>
    </div>

    <!-- Mobile Menu -->
    <div class="md:hidden flex items-center gap-4">
      <button
        id="mobile-menu-button"
        class="p-2 text-gray-500 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg"
        aria-label="Toggle menu"
      >
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
      </button>
    </div>

    <!-- Mobile Menu Dropdown -->
    <div
      id="mobile-menu"
      class="fixed inset-0 bg-gray-900/50 dark:bg-gray-900/80 z-50 hidden"
      onclick="this.classList.add('hidden')"
    >
      <div
        class="absolute right-0 top-0 h-full w-64 bg-white dark:bg-gray-800 p-4 shadow-lg"
        onclick="event.stopPropagation()"
      >
        <div class="flex justify-end mb-4">
          <button
            onclick="document.getElementById('mobile-menu').classList.add('hidden')"
            class="p-2 text-gray-500 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg"
          >
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
        </div>
        <div class="flex flex-col gap-4">
          {navItems.map(({ href, label }) => (
            <a
              href={`/${lang}${href}`}
              class={`text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white ${
                pathname === `/${lang}${href}` ? 'font-bold' : ''
              }`}
            >
              {t(label)}
            </a>
          ))}
          <hr class="my-2 border-gray-200 dark:border-gray-700" />
          <LanguagePicker />
        </div>
      </div>
    </div>
  </nav>
</header>

<script>
  // Theme toggle functionality
  const themeToggleBtn = document.getElementById('theme-toggle');
  const themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');
  const themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');

  // Set initial icon
  if (document.documentElement.classList.contains('dark')) {
    themeToggleLightIcon?.classList.remove('hidden');
  } else {
    themeToggleDarkIcon?.classList.remove('hidden');
  }

  themeToggleBtn?.addEventListener('click', () => {
    document.documentElement.classList.toggle('dark');
    
    // Update localStorage
    if (document.documentElement.classList.contains('dark')) {
      localStorage.theme = 'dark';
      themeToggleDarkIcon?.classList.add('hidden');
      themeToggleLightIcon?.classList.remove('hidden');
    } else {
      localStorage.theme = 'light';
      themeToggleDarkIcon?.classList.remove('hidden');
      themeToggleLightIcon?.classList.add('hidden');
    }
  });

  // Mobile menu functionality
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');

  mobileMenuButton?.addEventListener('click', () => {
    mobileMenu?.classList.remove('hidden');
  });
</script>